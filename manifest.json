{
    "scripts": [
        {
            "name": "List available scripts",
            "description": "Displays all available CLI scripts in the manifest",
            "command": "listscripts",
            "aliases": [
                "lcs"
            ],
            "location": "bash/listscripts.sh"
        },
        {
            "name": "Reload scripts",
            "description": "Shorthand for 'source ~/.bashrc'",
            "command": "reloadscripts",
            "location": "bash/reloadscripts.sh"
        },
        {
            "name": "Git clone and enter directory",
            "description": "Clones a git project using a git URL and then navigates into newly created directory",
            "command": "gclone",
            "flags": [
                "-h",
                "--help"
            ],
            "location": "bash/gclone.sh"
        },
        {
            "name": "Git push (with upstream setting)",
            "description": "Will check if there's an upstream branch that matches current branch, calls 'git push' if upstream exists, creates it if it doesn't",
            "command": "gpush",
            "flags": [
                "-h",
                "--help"
            ],
            "location": "bash/gpush.sh"
        },
        {
            "name": "Go to repo",
            "description": "Opens the GitHub repo in the default browser. Use '-cb' or '--current-branch' to open the current branch if it exists remotely.",
            "command": "gorepo",
            "aliases": [
                "gogit",
                "gogithub"
            ],
            "location": "bash/gorepo.sh"
        },
        {
            "name": "Go to projects",
            "description": "Navigates to the projects folder, defined by the PROJECTS_PATH variable in config file",
            "command": "gotoprojects",
            "aliases": [
                "gtp"
            ],
            "location": "bash/gotoprojects.sh"
        },
        {
            "name": "List projects",
            "description": "Lists folders in projects, accepts all flags provided by ls command",
            "command": "lsprojects",
            "aliases": [
                "lsp"
            ],
            "location": "bash/lsprojects.sh"
        },
        {
            "name": "Go sln",
            "description": "Shorthand for 'start *.sln'",
            "command": "gosln",
            "aliases": [
                "sln"
            ],
            "location": "bash/gosln.sh"
        },
        {
            "name": "Playground",
            "description": "A place to test scripts",
            "command": "goplay",
            "location": "bash/playground.sh"
        }
    ]
}